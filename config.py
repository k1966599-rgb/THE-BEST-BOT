"""
ููู ุงูุชูููู ุงูุณุฑูุน ููุจูุช
ูู ุจุชุนุฏูู ุงูููู ุฃุฏูุงู ุญุณุจ ุงุญุชูุงุฌุงุชู
"""

# ุฅุนุฏุงุฏุงุช ุงูุชุฏุงูู ูุงูุชุญููู
TRADING_CONFIG = {
    # ูุนุฑู ุงูููุตุฉ ุนูู ccxt (e.g., 'okx', 'binance', 'kucoin')
    'EXCHANGE_ID': 'okx',

    # ุงูุฑูุฒ ุงูุงูุชุฑุงุถู ููุชุญููู
    'DEFAULT_SYMBOL': 'BTC/USDT',

    # ูุชุฑุฉ ุงูุจูุงูุงุช ุงููุทููุจุฉ (ccxt ูุง ูุณุชุฎุฏููุง ูุจุงุดุฑุฉุ ูุญุฏุฏ ุชุงุฑูุฎ ุงูุจุฏุก)
    'PERIOD': '1y',

    # ูุงุตู ุฒููู ููุดููุน (e.g., '1m', '5m', '1h', '1d', '1w')
    'INTERVAL': '1d',

    # ุฑุตูุฏ ุงูุญุณุงุจ ุงูุงูุชุฑุงุถู ููุชุญููู
    'ACCOUNT_BALANCE': 10000,

    # ูุณุจุฉ ุงููุฎุงุทุฑุฉ ุงููุตูู ููู ุตููุฉ (2% = 0.02)
    'MAX_RISK_PER_TRADE': 0.02,

    # ูุณุจุฉ ุงููุฎุงุทุฑุฉ ุงููุตูู ูููุญูุธุฉ (6% = 0.06)
    'MAX_PORTFOLIO_RISK': 0.06
}

# ุฅุนุฏุงุฏุงุช ุงูููุตุฉ (ุงุฎุชูุงุฑูุ ูู private endpoints)
EXCHANGE_CONFIG = {
    'API_KEY': '',
    'API_SECRET': '',
    # ุจุนุถ ุงูููุตุงุช ูุซู OKX ุชุชุทูุจ ูููุฉ ูุฑูุฑ API
    'PASSWORD': '',
    # ccxt ููููู ุงุณุชุฎุฏุงู ูุถุน ุงูุงุฎุชุจุงุฑ ูุจุนุถ ุงูููุตุงุช
    'SANDBOX_MODE': False
}

# ุฅุนุฏุงุฏุงุช ุงูุชููุฌุฑุงู (ุงุฎุชูุงุฑูุฉ)
TELEGRAM_CONFIG = {
    'BOT_TOKEN': '',
    'CHAT_ID': '',
    'AUTO_SEND': False
}

# ุฅุนุฏุงุฏุงุช ุงูุชุญููู ุงููุชูุฏูุฉ
ANALYSIS_CONFIG = {
    'LOOKBACK_PERIOD': 50,
    'PIVOT_WINDOW': 5,
    'MIN_PATTERN_BARS': 10,
    'LEVEL_TOLERANCE': 0.002,
    'ATR_MULTIPLIER': 2.0,
    'ATR_PERIOD': 14
}

# ูุงุฆูุฉ ุงููุฑุงูุจุฉ (ุชุฃูุฏ ูู ุฃู ุงูุฑููุฒ ุจุงูุชูุณูู ุงูุตุญูุญ ููููุตุฉ)
WATCHLIST = [
    'BTC/USDT', 'ETH/USDT', 'SOL/USDT', 'XRP/USDT', 'DOGE/USDT',
    'ADA/USDT', 'AVAX/USDT', 'DOT/USDT', 'BNB/USDT', 'MATIC/USDT'
]

# ุฅุนุฏุงุฏุงุช ุงูุญูุธ ูุงูุชูุงุฑูุฑ
OUTPUT_CONFIG = {
    'OUTPUT_FOLDER': 'analysis_reports',
    'FILENAME_FORMAT': '{symbol}_analysis_{timestamp}',
    'SAVE_JSON': True,
    'SAVE_TXT': True,
    'SAVE_CHARTS': False
}

def get_config():
    """ุงุณุชุฑุฌุงุน ุฌููุน ุงูุฅุนุฏุงุฏุงุช"""
    return {
        'trading': TRADING_CONFIG,
        'exchange': EXCHANGE_CONFIG,
        'telegram': TELEGRAM_CONFIG,
        'analysis': ANALYSIS_CONFIG,
        'watchlist': WATCHLIST,
        'output': OUTPUT_CONFIG
    }

def print_current_config():
    """ุทุจุงุนุฉ ุงูุฅุนุฏุงุฏุงุช ุงูุญุงููุฉ"""
    config = get_config()
    print("๐ ุงูุฅุนุฏุงุฏุงุช ุงูุญุงููุฉ:")
    print("="*40)
    for section_name, section_data in config.items():
        if section_name == 'watchlist':
            print(f"\n๐ {section_name.upper()}:")
            # ุชุญููู ุงุณู ุงูุฑูุฒ ููููู ุตุงูุญูุง ูุงุณู ููู
            symbols_str = [s.replace('/', '_') for s in section_data]
            print(f"   {', '.join(symbols_str)}")
        else:
            print(f"\nโ๏ธ {section_name.upper()}:")
            for key, value in section_data.items():
                if key.upper() in ['BOT_TOKEN', 'CHAT_ID', 'API_KEY', 'API_SECRET', 'PASSWORD'] and value:
                    print(f"   {key}: {'*' * 10}")
                else:
                    print(f"   {key}: {value}")

if __name__ == "__main__":
    print_current_config()
